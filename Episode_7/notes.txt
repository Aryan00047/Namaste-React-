when is useEffect called? ------- important for interview

useEffect(()=>{},[]) // syntax

It is called after every render of component. Everytime out component renders, useEffect is called, with no dependency array.
But with dependency array, useEffect(()=>{},)

if empty - useEffect(()=>{},[]) --- usEffect is called ust once, initially. It wont be called again and again , even if component re renders.
if having some dependency --- useEffect(()=>{},[...]) --- it is called everytime dependency changes. 

Never call useState() outside of the component, it is used for creating localside variables inside the component, always call in the 
top of component , because react is a single thread language, it reads from top to bottom.... 
Never use inside if-else/ for-loop/ function, this can create in-consistensies in the program.

React-Router-DOM --- It is a react library

createBrowserRouter is a mostly used way, but there are other routers also, read in docs
write everything manually, while learning, use faster methods when you have experience
shortcut for component creation - rafce

RouterProvider

React Router DOM gives us access to an important hook --- useRouteError. It tells us more details regarding the error

//children route
children:[]

Outlet is a component given by react-router-dom for rendering children conditionally according to path

<Link /> is a special component given by reaact-router-dom and behind the scenes it uses <a> tag. 
It is a wrapper over <a/> tag. ReactRouterDOM keeps track and prevents refreshing of page. Browser understands <a/> tag.

React first mounts the new component and then unmount the component not required. That's why you see About rendered before 
Contact unmounted.

✅ Why React does this
React wants to avoid a “gap” where nothing is on screen.
If it unmounted <Contact> before rendering <About>, you’d see a flicker (blank UI).
By mounting the new component first, React ensures smooth transitions.